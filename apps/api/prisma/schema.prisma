generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  uid      String   @id @default(cuid())
  email    String?  @unique
  displayName String?
  slug     String?  @unique
  photoURL String?

  refreshToken String?
  createdAt DateTime @default(now())

  organizationMember OrganizationMember[]
  providerAccounts Account[]

  registeredEventsId  Events[]
}

model Account {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [uid])

  provider  String
  providerAccountId String

  providerAccessToken String?
  providerRefreshToken String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([provider, providerAccountId], name: "verify_provider_account")
}

model Organization {
  id        String   @id @default(cuid())
  name      String
  slug      String   @unique

  members   OrganizationMember[]
  invites   OrganizationInvite[]
  events    Events[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model OrganizationMember {
  id      String   @id @default(cuid())
  role    Role

  userUid String
  user   User @relation(fields: [userUid], references: [uid])

  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  @@unique([userUid, organizationId])
}

model OrganizationInvite {
  id      String   @id @default(cuid())
  inviteeEmail String
  inviteeRole  Role

  inviterUid   String
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  @@unique([inviteeEmail, organizationId])
}

model Events {
  id              String  @id @unique @default(dbgenerated("(gen_random_uuid())::text"))
  name            String
  description     String
  website         String?
  location        String
  createdAt       DateTime @default(now())
  lastDate        DateTime
  organizationId  String
  organization    Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  registeredUsers User[]
}


enum Role {
  ADMIN
  EDITOR
  VIEWER
}