// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                      String @id @default(dbgenerated("gen_random_uuid()::TEXT"))
  name                    String
  email                   String
  bio                     String
  githubID                String?
  skills                  Skill[]
  organized               Event[]
  participated            TeamMembers[]
  Student                 Boolean
}

model Event {
  id                      String @id @default(dbgenerated("gen_random_uuid()::TEXT"))
  slug                    String @unique
  title                   String
  image                   String
  description             String
  guidelines              String
  mode                    Mode
  venue                   String?
  fee                     BigInt?

  
  status                  EventStatus @default(PENDING)
  registrationStart       DateTime
  registrationEnd         DateTime
  eventStarting           DateTime
  eventEnding             DateTime
  
  twitter                 String
  email                   String
  website                 String?
  instagram               String?
  linkedin                String?
  discord                 String?

  faq                     Json?

  sponsors                Sponsor[]
  prizes                  Prizes[]
  tags                    Tag[]
  organizers              User[]
  teams                   Team[]
  members                 TeamMembers[]


}

model Prizes {
  id          String @id @default(dbgenerated("gen_random_uuid()::TEXT"))
  eventId     String
  sponsorId   String
  sponsor     Sponsor @relation(fields: [sponsorId], references: [id])
  event       Event @relation(fields: [eventId], references: [id])
}

model Sponsor {
  id          String @id @default(dbgenerated("gen_random_uuid()::TEXT"))
  name        String
  description String
  tier        Tier
  prizes      Prizes[]

  eventId     String
  event       Event @relation(fields: [eventId], references: [id])
}

enum Tier{
  Platinum
  Gold
  Silver
  Bronze
}

enum Mode {
  OFFLINE
  ONLINE
  HYBRID
}

enum EventStatus {
  PENDING
  LISTED
  UPDATION
}

model Skill {
  id   String @id @unique @default(dbgenerated("gen_random_uuid()::TEXT"))
  name String @unique
  user User[]
}

model Tag{
  id        String @id @default(dbgenerated("gen_random_uuid()::TEXT"))
  name      String @unique
  events    Event[]
}

model Team {
  id            String @id @default(dbgenerated("gen_random_uuid()::TEXT"))
  name          String @unique
  repo          String
  description   String?
  videoLink     String?
  inviteCode    String

  eventId       String
  event         Event @relation(fields: [eventId], references: [id])

  members       TeamMembers[]
  createdAt     DateTime @default(now())

}

model TeamMembers {
  id            String @default(dbgenerated("gen_random_uuid()::TEXT"))
  role          Role

  userId        String
  user          User @relation(fields: [userId], references: [id])

  teamId        String
  team          Team  @relation(fields: [teamId], references: [id])

  eventId       String
  event         Event @relation(fields: [eventId], references: [id])

  @@unique([userId, eventId])
  @@unique([userId, teamId])
  @@id([userId, eventId])
}

enum Role {
  MEMBER
  LEAD
}
